/*
 * testinterface.c
 *
 *  Created on: Apr 9, 2020
 *      Author: Mahmoud Ahmed
 */

#include "testinterface.h"
#include "sci.h"
#include "Phantom_sci.h"
#include "string.h"


static unsigned char command;

static uint8_t charbuf[BUFFER_SIZE];

static volatile testBuffer testbuf = {
    0,
    0,
    charbuf,
    BUFFER_SIZE,
    0,
    sizeof(char)
};

void echoChar(void)
{
    /* Await further character */

        sciReceive(sciREG, 1,(unsigned char *)&command);
        processChar(command);

}

void processChar(unsigned char character)
{
    if(character == '\r')
    {
        UARTSend(sciREG, "\n\r");
    }
    else if(character == '\b')
    {
        UARTSend(sciREG, "\b");
        UARTSend(sciREG, " ");
        UARTSend(sciREG, "\b");
    }
    else{
        push_tb(character);
        sciSend(sciREG, 1,(unsigned char *)&character);
    }
}

void push_tb(unsigned char character)
{
    memcpy(testbuf
}
