/*
 * testinterface.c
 *
 *  Created on: Apr 9, 2020
 *      Author: Mahmoud Ahmed
 */

#include "testinterface.h"
#include "sci.h"
#include "Phantom_sci.h"
#include "string.h"
#include "stdbool.h"


static unsigned char command;

static unsigned char charbuf[BUFFER_SIZE];

static volatile testBuffer testbuf = {
    0,
    0,
    charbuf,
    BUFFER_SIZE,
    0,
    sizeof(unsigned char)
};

void echoChar(void)
{
    /* Await further character */

        sciReceive(sciREG, 1,(unsigned char *)&command);
        processChar(command);

}

void processChar(unsigned char character)
{
    if(character == '\r')
    {
        displayPrompt();
    }
    else if(character == '\b')
    {
        UARTprintf("\b");
        UARTprintf(" ");
        UARTprintf("\b");
    }
    else{
        push_tb(character);
        //sciSend(sciREG, 1,(unsigned char *)&character);
        UARTprintf((char *)testbuf.buffer);
    }
}

void push_tb(unsigned char character)
{

    //memcpy(testbuf.buffer + (testbuf.tail*testbuf.datasize), &character, testbuf.datasize);
    charbuf[testbuf.count] = character;
    charbuf[testbuf.count + 1] = "\0";
    testbuf.tail = (testbuf.tail + 1) % testbuf.length;

    testbuf.count++;
}

void pop_tb()
{

}

static void displayPrompt(void)
{
    UARTprintf("\n\r> ");
}
